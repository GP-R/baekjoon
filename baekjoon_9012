#include <iostream>
#include<algorithm>
#include<array>
#include<string>
#include<cstring>
using namespace std;

class Stack {
	int top, MaxSize;
	char* stack;
public:
	Stack(int size)
	{
		MaxSize = size;
		stack = new char[MaxSize];
		top = -1;
	}

	bool isFull() {
		if (top == MaxSize - 1) return true;
		else return false;
	}

	bool isEmpty() {
		if (top == -1) return true;
		else return false;
	}

	char pop() {
		if (isEmpty() == true) return 0;
		else return stack[top--];
	}

	void push(char element) {
		if (isFull() == true) return;
		else stack[++top] = element;
	}


	void print() {
		for (int i = 0; i < top + 1; ++i)
			cout << stack[i] << endl;
	}
	/*int sum() {
		int result = 0;
		for (int i = 0; i < top + 1; ++i)
			result += stack[i];
		return result;
	}*/

	int size()
	{
		if (isEmpty() == true)
			return 0;
		return top + 1;
	}
};


int main(void)
{
	int n;
	cin >> n;
	Stack stack{ 51 };
	char arr[51];
	int count = 0;
	for (int i = 0; i < n; i++)
	{
		cin >> arr;
		for (int j = 0; j < strlen(arr); j++)
		{
			stack.push(arr[j]);
		}
		for (int j = 0; j < strlen(arr); j++)
		{
			if (stack.pop() == ')')
				count++;
			else
				count--;
			if (count < 0)
				count = -999;
		}
		if (count == 0)
			cout << "YES" << endl;
		else
			cout << "NO" << endl;
		count = 0;
	}
	return 0;
}
